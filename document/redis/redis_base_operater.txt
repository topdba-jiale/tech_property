-- redis install
-- 192.168.2.221:6388

wget http://download.redis.io/releases/redis-5.0.8.tar.gz
tar xzvf redis-5.0.8.tar.gz -C /usr/local/
cd /usr/local/redis-5.0.8 && make && make PREFIX=/usr/local/redis install   
#ln -s /usr/local/redis-5.0.8/src/redis-server /usr/bin/
#ln -s /usr/local/redis-5.0.8/src/redis-cli /usr/bin/
#cp /usr/local/redis-5.0.8/redis.conf /etc/redis_6379.conf
cp /usr/local/redis-5.0.8/redis.conf /usr/local/redis
ln -s /usr/local/redis/bin/* /usr/bin/


127.0.0.1:6388> keys *
(empty list or set)
127.0.0.1:6388> set name jacky
OK
127.0.0.1:6388> MSET name1 n1 name2 n2 
OK
127.0.0.1:6388> 
127.0.0.1:6388> set pass_date 2019-03-20 EX 60000
OK
127.0.0.1:6388> RENAME name1 name_1
OK
127.0.0.1:6388> 
127.0.0.1:6388> DBSIZE
(integer) 4
127.0.0.1:6388> keys *
1) "pass_date"
2) "name_1"
3) "name"
4) "name2"
127.0.0.1:6388> 

127.0.0.1:6388> type name2
string
127.0.0.1:6388> 
127.0.0.1:6388> 
127.0.0.1:6388> 
127.0.0.1:6388> keys *
1) "pass_date"
2) "name_1"
3) "name"
4) "name2"
127.0.0.1:6388> GETSET user:1:zhangxueyou 96
(nil)
127.0.0.1:6388> 
127.0.0.1:6388> KEYS zhang*
(empty list or set)
127.0.0.1:6388> KEYS *
1) "pass_date"
2) "name_1"
3) "name"
4) "user:1:zhangxueyou"
5) "name2"
127.0.0.1:6388> set rank:1:group1 2
OK
127.0.0.1:6388> INCR rank:1:group1
(integer) 3
127.0.0.1:6388> get rank:1:group1
"3"
127.0.0.1:6388> INCRBY rank:1:group1 10
(integer) 13
127.0.0.1:6388> get rank:1:group1
"13"
127.0.0.1:6388> 

[root@192 ~]# redis-cli -h 127.0.0.1 -p 6388 -a root@qunje2020
Warning: Using a password with '-a' or '-u' option on the command line interface may not be safe.
127.0.0.1:6388> 
127.0.0.1:6388> 
127.0.0.1:6388> 
127.0.0.1:6388> 
127.0.0.1:6388> HSET user:1 id 1
(integer) 1
127.0.0.1:6388> HMSET user:1 name jacky age 30
OK
127.0.0.1:6388> 
127.0.0.1:6388> HMGET user:1 name age
1) "jacky"
2) "30"
127.0.0.1:6388> 
127.0.0.1:6388> HGETALL user:1
1) "id"
2) "1"
3) "name"
4) "jacky"
5) "age"
6) "30"
127.0.0.1:6388> HMSET user:2 id 2 name tommy age 33 phone 13890806309
OK
127.0.0.1:6388> HGETALL user:2
1) "id"
2) "2"
3) "name"
4) "tommy"
5) "age"
6) "33"
7) "phone"
8) "13890806309"
127.0.0.1:6388> HMSET user:2 remark ok 
OK
127.0.0.1:6388> HGETALL user:2
 1) "id"
 2) "2"
 3) "name"
 4) "tommy"
 5) "age"
 6) "33"
 7) "phone"
 8) "13890806309"
 9) "remark"
10) "ok"
127.0.0.1:6388> HLEN user:2
(integer) 5
127.0.0.1:6388> 
127.0.0.1:6388> HEXISTS user:2 age
(integer) 1
127.0.0.1:6388> HGETALL user:2
 1) "id"
 2) "2"
 3) "name"
 4) "tommy"
 5) "age"
 6) "33"
 7) "phone"
 8) "13890806309"
 9) "remark"
10) "ok"
127.0.0.1:6388> HINCRBY user:2 age 2
(integer) 35
127.0.0.1:6388> HGET user:2 age
"35"
127.0.0.1:6388> HGETALL user:2
 1) "id"
 2) "2"
 3) "name"
 4) "tommy"
 5) "age"
 6) "35"
 7) "phone"
 8) "13890806309"
 9) "remark"
10) "ok"

127.0.0.1:6388> set user:3 {id:3,name:andongri,age:40,city:"beijing"}
Invalid argument(s)
127.0.0.1:6388> set user:3 {id:3,name:andongri,age:40,city:beijing}
OK
127.0.0.1:6388> type user:3
string
127.0.0.1:6388> get user:3
"{id:3,name:andongri,age:40,city:beijing}"

127.0.0.1:6388> hmset user:2 name jiale age 33 city nanjing
OK
127.0.0.1:6388> HEXISTS user:2 add
(integer) 0
127.0.0.1:6388> HEXISTS user:2 age
(integer) 1
127.0.0.1:6388> HKEYS user:2
1) "name"
2) "age"
3) "city"
127.0.0.1:6388> 

127.0.0.1:6388> HGETALL user:2
1) "name"
2) "jiale"
3) "age"
4) "33"
5) "city"
6) "nanjing"
127.0.0.1:6388> 

-- session 1
[root@localhost redis]#  redis-cli -h 127.0.0.1 -p 6388 -a root@qunje2020
Warning: Using a password with '-a' or '-u' option on the command line interface may not be safe.
127.0.0.1:6388> 
127.0.0.1:6388> LPUSH l01:user:number 01 02 03 04 05
(integer) 5
127.0.0.1:6388> 
127.0.0.1:6388> 
127.0.0.1:6388> BLPOP l02 2000
1) "l02"
2) "28"
(12.13s)


-- session 2
127.0.0.1:6388> LPUSH l02 99 83 28
(integer) 3


-- 持久化 (RDB和aof)
1.1 RDB触发持久化方式
    手动触发，自动触发
    1.1.1 手动触发:执行 bgsave命令
    1.1.2 自动触发:
          1.使用save m n 
          2.从节点执行全量复制
          3.debug reload 命令重新加载redis
          4.shutdown -- 如果未开启aof，则会自动执行bgsave
1.2 RDB的优缺点:
    1.2.1优点：紧凑压缩的二进制文件，恢复数据较快
    1.2.2缺点：
             1.无法做到实时持久化，
             2.较重，频繁执行成本高。
             3.版本存在多种格式，兼容性是个问题。

2.aof
2.1           



